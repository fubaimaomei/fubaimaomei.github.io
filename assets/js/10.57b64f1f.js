(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{266:function(s,a,t){"use strict";t.r(a);var e=t(2),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),t("h5",{attrs:{id:"数据模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据模型"}},[s._v("#")]),s._v(" 数据模型")]),s._v(" "),t("ul",[t("li",[s._v("层次模型 "),t("em",[s._v("树状结构")])]),s._v(" "),t("li",[s._v("网状模型 "),t("em",[s._v("节点相互连接")])]),s._v(" "),t("li",[s._v("关系模型 "),t("em",[s._v("表格结构")])])]),s._v(" "),t("p",[s._v("关系模型占主导地位")]),s._v(" "),t("h4",{attrs:{id:"数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[s._v("#")]),s._v(" 数据类型")]),s._v(" "),t("ul",[t("li",[s._v("INT")]),s._v(" "),t("li",[s._v("BIGINT")]),s._v(" "),t("li",[s._v("REAL")]),s._v(" "),t("li",[s._v("DOUBLE")]),s._v(" "),t("li",[s._v("DECIMAL")]),s._v(" "),t("li",[s._v("CHAR")]),s._v(" "),t("li",[s._v("VARCHAR")]),s._v(" "),t("li",[s._v("BOOLEAN")]),s._v(" "),t("li",[s._v("DATE")]),s._v(" "),t("li",[s._v("TIME")]),s._v(" "),t("li",[s._v("DATETIME")])]),s._v(" "),t("p",[s._v("SQL 是结构化查询语言的缩写，用来访问和操作数据库系统。")]),s._v(" "),t("h2",{attrs:{id:"安装-mysql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-mysql"}},[s._v("#")]),s._v(" 安装 mysql")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://dev.mysql.com/downloads/mysql/",target:"_blank",rel:"noopener noreferrer"}},[s._v("下载对应版本的 MySQL 压缩包"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("作者用的是 windows 所以这里只记录 windows 的安装过程")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 配置环境变量，也可以不配置cd到bin目录执行\n\n# 安装\n\nmysqld -install\n\n# 卸载\n\nmysqld -remove\n\n# 初始化\n\nmysqld --initialize\n\n# 等待一段时间之后,主目录下会生成一个data文件夹,其中err结尾的单文件内保存有初始root密码。\n\n# 新建配置文件 my.ini\n\nbasedir=C:\\Mysql\\mysql-8.0.17-winx64    // 根目录\ndatadir=C:\\Mysql\\mysql-8.0.17-winx64\\data // 数据存放目录\nport=3306 // 端口号\n\n# 启动服务\n\nnet start mysql\n\n# MySQL服务已经启动成功\n\n# 登录\n\nmysql -u root -p\n\n# 退出\n\nquit\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br")])]),t("h2",{attrs:{id:"关系模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关系模型"}},[s._v("#")]),s._v(" 关系模型")]),s._v(" "),t("p",[s._v("关系数据库是建立在关系模型上，而关系模型本质就是若干个存储数据的二维表，可以简单理解为 Excel 表。")]),s._v(" "),t("p",[s._v("一条记录由多个字段组成，例如：")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("id")]),s._v(" "),t("th",[s._v("class_id")]),s._v(" "),t("th",[s._v("name")]),s._v(" "),t("th",[s._v("gender")]),s._v(" "),t("th",[s._v("score")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("1")]),s._v(" "),t("td",[s._v("1")]),s._v(" "),t("td",[s._v("小明")]),s._v(" "),t("td",[s._v("M")]),s._v(" "),t("td",[s._v("90")])]),s._v(" "),t("tr",[t("td",[s._v("2")]),s._v(" "),t("td",[s._v("1")]),s._v(" "),t("td",[s._v("小红")]),s._v(" "),t("td",[s._v("F")]),s._v(" "),t("td",[s._v("95")])])])]),s._v(" "),t("h6",{attrs:{id:"主键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主键"}},[s._v("#")]),s._v(" 主键")]),s._v(" "),t("p",[s._v("主键类型:")]),s._v(" "),t("ol",[t("li",[s._v("自增整数类型 (会有数值最大值限制)")]),s._v(" "),t("li",[s._v("全局唯一 GUID 类型 (字符串没有最大值问题)")])]),s._v(" "),t("p",[s._v("联合主键由多个字段组成唯一的标识记录，但尽量不要使用联合主键，会增加复杂度。")]),s._v(" "),t("h5",{attrs:{id:"外键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#外键"}},[s._v("#")]),s._v(" 外键")]),s._v(" "),t("p",[s._v("把数据与另一张表关联起来，这种列称为外键。")]),s._v(" "),t("p",[s._v("外键约束")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("ALTER TABLE students 指定关联的数据表\nADD CONSTRAINT fk_class_id 约束名称任意\nFOREIGN KEY (class_id) 指定class_id为外键\nREFERENCES classes (id); 关联的表的列名\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("删除外键")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("ALTER TABLE students  拥有外键的数据表\nDROP FOREIGN KEY fk_class_id; 删除外键约束\n\nDROP COLUMN ... 删除整列\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("约束会造成性能影响，通常情况下程序只依靠自身的逻辑来保证正确性，这种情况下，外键只单单是一个普通的列，而不是一个约定好的外键，但也同样能正确工作。")]),s._v(" "),t("h5",{attrs:{id:"索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[s._v("#")]),s._v(" 索引")]),s._v(" "),t("p",[s._v("索引时关系数据库中对某一列或多个列的值进行预排序的数据结构，可以直接定位到符合条件的记录，加快查询速度。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("ALTER TABLE students;  // 查询 students 表\nADD INDEX idx_score (score); // 查询表中的 score 列\nADD INDEX idx_name_score (name, score); // 查询多列\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h5",{attrs:{id:"唯一索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#唯一索引"}},[s._v("#")]),s._v(" 唯一索引")]),s._v(" "),t("p",[s._v("与业务含义相关的字段都不能作为主键使用，但每个字段都具有唯一性。因为一条记录中不可能出现两条同样的身份证号。")]),s._v(" "),t("p",[s._v("假设 students 表的 name 不能重复")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("ALTER TABLE students\nADD UNIQUE INDEX uni_name (name);  // 添加一个唯一索引\n\nALTER TABLE students\nADD CONSTRAINI uni_name (name); // 添加唯一约束而不创建唯一索引\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"查询数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查询数据"}},[s._v("#")]),s._v(" 查询数据")]),s._v(" "),t("p",[t("code",[s._v("SELECT * FROM <表名>")])]),s._v(" "),t("ul",[t("li",[s._v("SELECT 关键字表示执行一个查询操作")]),s._v(" "),t("li",[s._v("* 表示所有列")]),s._v(" "),t("li",[s._v("FROM 表示从哪个表查询")])]),s._v(" "),t("p",[t("code",[s._v("SELECT 100 + 200")]),s._v(" 计算一个表达式，因此该关键字可以用于计算")]),s._v(" "),t("h5",{attrs:{id:"条件查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#条件查询"}},[s._v("#")]),s._v(" 条件查询")]),s._v(" "),t("p",[s._v("SELECT 语句可以通过 WHERE 条件来设定查询条件。比如指定 分数高于 80 以上的学生")]),s._v(" "),t("p",[t("code",[s._v("SELECT * FROM students WHERE score >= 80")])]),s._v(" "),t("p",[s._v("WHERE 关键字后面的 score >= 80 就是条件，score 是列名，该列存储了学生的成绩。")]),s._v(" "),t("p",[s._v("因此条件查询的语法就是:")]),s._v(" "),t("p",[t("code",[s._v("SELECT * FROM <表名> WHERE <条件表达式>")])]),s._v(" "),t("p",[s._v("条件表达式可以用<条件 1> AND <条件 2> 表达满足条件 1 并且满足条件 2 。")]),s._v(" "),t("p",[s._v("分数在 80 且为男生")]),s._v(" "),t("p",[t("code",[s._v("SELECT * FROM students WHERE score >= 80 AND gender = 'M'")])]),s._v(" "),t("p",[s._v("AND/OR/NOT")]),s._v(" "),t("p",[s._v("常用的条件表达式:")]),s._v(" "),t("ul",[t("li",[s._v("=")]),s._v(" "),t("li",[s._v(">")]),s._v(" "),t("li",[s._v("<")]),s._v(" "),t("li",[s._v("<> 不相等")]),s._v(" "),t("li",[s._v("LIKE name LIKE'ab%' %表示任意字符")])]),s._v(" "),t("p",[t("strong",[s._v("WHERE")]),s._v(" 旨意在于筛选数据")]),s._v(" "),t("h5",{attrs:{id:"投影查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#投影查询"}},[s._v("#")]),s._v(" 投影查询")]),s._v(" "),t("p",[t("code",[s._v("SELECT id, score, name FROM students;")]),s._v(" 返回仅需要的列")]),s._v(" "),t("p",[t("code",[s._v("SELECT id, score points, name FROM students;")]),s._v(" pints 是 score 的别名")]),s._v(" "),t("p",[t("code",[s._v("SELECT id, score points,name FROM students WHERE gender = 'M'")])]),s._v(" "),t("h5",{attrs:{id:"排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[s._v("#")]),s._v(" 排序")]),s._v(" "),t("p",[s._v("-- 按照分数排序 从低到高")]),s._v(" "),t("p",[t("code",[s._v("SELECT id,name,gender,score FROM students ORDER BY score")]),s._v(";")]),s._v(" "),t("p",[s._v("-- 从高到低")]),s._v(" "),t("p",[t("code",[s._v("SELECT id,name,gender,score FROM students ORDER BY score DESC")])]),s._v(" "),t("p",[s._v("-- 进一步排序")]),s._v(" "),t("p",[t("code",[s._v("SELECT id,name,gender,score FROM students ORDER BY score DESC,gender;")])]),s._v(" "),t("p",[s._v("ASC 是升序，即从小到大")]),s._v(" "),t("p",[t("code",[s._v("SELECT id,name,gender,score FROM students WHERE class_id = 1 ORDER BY score DESC")]),s._v(";")]),s._v(" "),t("h5",{attrs:{id:"分页查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分页查询"}},[s._v("#")]),s._v(" 分页查询")]),s._v(" "),t("p",[s._v("先对数据进行从高到低处理")]),s._v(" "),t("p",[t("code",[s._v("SELECT id,name,gender,score FROM students ORDER BY score DESC")]),s._v(";")]),s._v(" "),t("p",[s._v("分页处理")]),s._v(" "),t("p",[t("code",[s._v("SELECT id,name,gender,score FROM students ORDER BY score DESC LIMIT 3 OFFSET 0")]),s._v(";")]),s._v(" "),t("p",[t("code",[s._v("SELECT id,name,gender,score FROM students ORDER BY score DESC LIMIT 3 OFFSET 3")]),s._v(";")]),s._v(" "),t("p",[t("code",[s._v("SELECT id,name,gender,score FROM students ORDER BY score DESC LIMIT 3 OFFSET 6")]),s._v(";")]),s._v(" "),t("p",[t("code",[s._v("SELECT id,name,gender,score FROM students ORDER BY score DESC LIMIT 3 OFFSET 9")]),s._v(";")]),s._v(" "),t("p",[s._v("LIMIT 表示最多 3 条记录，如果最后一页只有一条记录那么只将显示一条。")]),s._v(" "),t("p",[s._v("LIMIT 和 OFFSET 应该设定的值：")]),s._v(" "),t("ul",[t("li",[s._v("LIMIT 总是设定为 pageSize")]),s._v(" "),t("li",[s._v("OFFSET 计算公式为 paseSize * (pageIndex - 1);")])]),s._v(" "),t("p",[t("code",[s._v("LIMIT 15 OFFSET 30")]),s._v(" 简写 "),t("code",[s._v("LIMIT 30,15")]),s._v(" 页数 30，15 条数据。")]),s._v(" "),t("h5",{attrs:{id:"聚合查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#聚合查询"}},[s._v("#")]),s._v(" 聚合查询")]),s._v(" "),t("p",[t("code",[s._v("SELECT COUNT(*) FROM stundents;")]),s._v(" "),t("code",[s._v("SELECT COUNT(*) num FROM stundents;")]),s._v(" 别名\n"),t("code",[s._v("SELECT COUNT(*) boys FROM stundents WHERE gender = 'M';")]),s._v(" 多少男生?")]),s._v(" "),t("p",[s._v("SQL 提供的其他聚合函数:")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("函数")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("SUM")]),s._v(" "),t("td",[s._v("计算某一列的合计值，该列必需为数值类型")])]),s._v(" "),t("tr",[t("td",[s._v("AVG")]),s._v(" "),t("td",[s._v("计算某一列的平均值，该列必需为数值类型")])]),s._v(" "),t("tr",[t("td",[s._v("MAX")]),s._v(" "),t("td",[s._v("计算某一列的最大值")])]),s._v(" "),t("tr",[t("td",[s._v("MIN")]),s._v(" "),t("td",[s._v("计算某一列的最小值")])])])]),s._v(" "),t("p",[s._v("统计男生平均成绩\n"),t("code",[s._v("SELECT AVG(score) average FROM students WHERE gender = 'M';")])]),s._v(" "),t("p",[s._v("每页数据为 3，获取数据的总页数\n"),t("code",[s._v("SELECT CEILING(COUNT(*)/3) from students;")])]),s._v(" "),t("p",[s._v("分组聚合")]),s._v(" "),t("p",[s._v("通过班级计算所有学生数量")]),s._v(" "),t("p",[t("code",[s._v("SELECT COUNT(*) num FROM stundens GROUP BY class_id;")])]),s._v(" "),t("p",[s._v("新增一列")]),s._v(" "),t("p",[t("code",[s._v("SELECT class_id, COUNT(*) num FROM students GROUP BY class_id")])]),s._v(" "),t("p",[s._v("报错")]),s._v(" "),t("p",[t("code",[s._v("SELECT name,class_id,COUNT(*) num FROM students GROUP BY class_id;")])]),s._v(" "),t("p",[s._v("统计各班的男生和女生人数")]),s._v(" "),t("p",[t("code",[s._v("SELECT class_id,gender,COUNT(*) num FROM students GROUP BY class_id,gender;")])]),s._v(" "),t("h5",{attrs:{id:"多表查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多表查询"}},[s._v("#")]),s._v(" 多表查询")]),s._v(" "),t("p",[t("code",[s._v("SELECT * FROM <表1><表2>")])]),s._v(" "),t("p",[s._v("-- set alias;")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("SELECT\n   s.id sid,\n   s.name,\n   s.gender,\n   s.score,\n   c.id cid,\n   c.name cnmae\nFROM students s,classes c;\n\n// 添加WHERE条件\n\nSELECT\n   s.id sid,\n   s.name,\n   s.gender,\n   s.score,\n   c.id cid,\n   c.name cnmae\nFROM students s,classes c\nWHERE s.gender = 'M' AND c.id = 1;  // 一班男同学\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("p",[t("em",[s._v("多表查询性能消耗非常巨大")])]),s._v(" "),t("h5",{attrs:{id:"连接查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#连接查询"}},[s._v("#")]),s._v(" 连接查询")]),s._v(" "),t("p",[s._v("连接查询是另一种类型的多表查询。连接查询对多个表进行 JOIN 运算。\n先确定一个主表作为结果集，然后，把其他表的行有选择性地连接在主表结果集上。")]),s._v(" "),t("p",[t("code",[s._v("SELECT s.id,s.name,s.class_id,s.gender,s.score FROM students s;")])]),s._v(" "),t("p",[s._v("需求：添加班级名称，但班级名称这个字段在 classes 表中。")]),s._v(" "),t("p",[s._v("通过 class_id -> classes -> name")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("SELECT s.id,s.name,s.class_id,s.gender,s.score\nFROM students s\nINNER JOIN classes c\nON s.class_id = c.id\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("INNER JOIN 内连接,查询的写法是: 1.先确定主表，任使用 FROM <表 1>的语法; 2.再确定需要连接的表，使用 INNER JOIN <表 2>的语法； 3.然后确定连接条件，使用 ON <条件...>,这里的条件是 s.class_id = c.id,表示 students 表的 class_id 列与 classes 表的 id 列相同的行进行连接; 4.可选：加上 WHERE 子句、ORDER BY 等子句进行筛选和排序。")]),s._v(" "),t("p",[s._v("使用外连接")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("SELECT s.id,s.name,s.class_id,s.gender,s.score\nFROM students s\nRIGHT OUTER JOIN classes c\nON s.class_id = c.id;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("有 RIGHT OUTER JOIN，就有 LEFT OUTER JOIN，以及 FULL OUTER JOIN。\nINNER JOIN 只返回同时存在于两张表的行数据，因为 students 表的 class_id 包含 1,2,3 classes 表的 id 包含 1,2,3,4,所以，INNER JOIN 根据条件 s.class_id = c.id 返回的结果集仅包含 1,2,3。\nRIGHT OUTER JOIN 返回右表都存在的行，如果一行仅在右表存在，那么结果集就会以 NULL 填充剩下的字段。\nLEFT OUTER JOIN 则是返回左表都存在的行。\nFULL OUTER JOIN 合并两张表的所有记录，并把对方不存在的字段填充为 null。")]),s._v(" "),t("p",[s._v("-- 总结")]),s._v(" "),t("p",[s._v("INNER JOIN 是两张表的集合")]),s._v(" "),t("h2",{attrs:{id:"修改数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改数据"}},[s._v("#")]),s._v(" 修改数据")]),s._v(" "),t("p",[s._v("关系数据库的基本操作就是增删改查，即 CRUD：Create/Retrieve/Update/Delete")]),s._v(" "),t("p",[s._v("SELECT 语句对应查询")]),s._v(" "),t("h5",{attrs:{id:"insert"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#insert"}},[s._v("#")]),s._v(" INSERT")]),s._v(" "),t("p",[s._v("当我们向数据库表中插入一条新记录时，就必需使用 INSERT 语句。")]),s._v(" "),t("p",[s._v("INSERT 语句的基本语法：")]),s._v(" "),t("p",[t("code",[s._v("INSERT INTO <表名> (字段1，字段2,...) VALUES (值1,值2,...)")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 添加一条新纪录")]),s._v("\nINSET "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("class_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("gender"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("score"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'凡凡'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'M'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'100'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查询结果")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 一次性添加多条记录")]),s._v("\nINSET "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("class_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("gender"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("score"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'大宝'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'M'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("88")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'桃子'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'F'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("99")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h5",{attrs:{id:"update"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[s._v("#")]),s._v(" UPDATE")]),s._v(" "),t("p",[s._v("如果要更新数据库表中的记录，我们就必需用 UPDATE 语句。")]),s._v(" "),t("p",[s._v("UPDATE 语句的基本语法是：")]),s._v(" "),t("p",[t("code",[s._v("UPDATE <表名> SET 字段1=值1,字段2=值2, .... WHERE....;")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 更新id=1的记录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"凡哥哥"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("score"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"100"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查询并观察结果；")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 更新多条记录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"凡哥哥"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("score"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"100"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" FROMstudents "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 使用表达式")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" score"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("score"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" score"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[t("strong",[s._v("UPDATE 语句可以没有 WHERE 条件，届时整个表的所有记录都会被给更新，所以在执行的时候应该给外小心，先通过 SELECT 筛选去符合预期的记录集，然后在用 UPDATE 执行更新。")])]),s._v(" "),t("h5",{attrs:{id:"delete"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[s._v("#")]),s._v(" DELETE")]),s._v(" "),t("p",[s._v("DELETE 语句的基本语法是：\n"),t("code",[s._v("DELETE FROM <表名> WHERE...")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 删除id为1的记录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELETE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 删除多条记录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELETE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 删除了3条记录")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("strong",[s._v("DELETE 不带 WHERE 同样会删除整张表记录。")])]),s._v(" "),t("h2",{attrs:{id:"mysql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[s._v("#")]),s._v(" MySQL")]),s._v(" "),t("p",[s._v("可单独安装 MySQL Client 连接远程 mysql 服务器\n"),t("code",[s._v("mysql -h 10.0.1.99 -u root -p")])]),s._v(" "),t("p",[s._v("mysql 是客户端 mysqld 是服务端")]),s._v(" "),t("h5",{attrs:{id:"管理-mysql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#管理-mysql"}},[s._v("#")]),s._v(" 管理 MySQL")]),s._v(" "),t("p",[s._v("要管理 MySQL,可以使用可视化图形界面"),t("a",{attrs:{href:"https://dev.mysql.com/downloads/workbench/",target:"_blank",rel:"noopener noreferrer"}},[s._v("MYSQL Workbench"),t("OutboundLink")],1)]),s._v(" "),t("h5",{attrs:{id:"数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库"}},[s._v("#")]),s._v(" 数据库")]),s._v(" "),t("p",[s._v("一个运行 MySQL 的服务器上，实际上可以创建多个数据库 (Database)。")]),s._v(" "),t("p",[s._v("查看服务器上所有数据库\n"),t("code",[s._v("mysql> SHOW DATABASES;")])]),s._v(" "),t("p",[s._v("创建新数据库")]),s._v(" "),t("p",[t("code",[s._v("mysql> CREATE DATABASE test;")])]),s._v(" "),t("p",[s._v("删除一个数据库")]),s._v(" "),t("p",[t("code",[s._v("mysql> DROP DATABASE test;")])]),s._v(" "),t("p",[s._v("对一个数据库操作时，要首先将其切换为当前数据库：")]),s._v(" "),t("p",[t("code",[s._v("mysql> USE test;")])]),s._v(" "),t("h5",{attrs:{id:"表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表"}},[s._v("#")]),s._v(" 表")]),s._v(" "),t("p",[s._v("列出当前数据库的所有表")]),s._v(" "),t("p",[t("code",[s._v("mysql > SHOW TABLES;")])]),s._v(" "),t("p",[s._v("查看表的结构")]),s._v(" "),t("p",[t("code",[s._v("mysql > DESC students;")])]),s._v(" "),t("p",[s._v("查看创建表的 SQL 语句：")]),s._v(" "),t("p",[t("code",[s._v("mysql> SHOW CREATE TABLE students")]),s._v(";")]),s._v(" "),t("p",[s._v("删除表")]),s._v(" "),t("p",[t("code",[s._v("DROP TABLE students")])]),s._v(" "),t("p",[s._v("要修改 birth 列，例如把列名改为 birthday,类型改为 VARCHAR(20)")]),s._v(" "),t("p",[t("code",[s._v("ALTER TABLE students CHANGE CLOUMN birth birthday VARCHAR(20) NOT NULL;")])]),s._v(" "),t("p",[s._v("删除列")]),s._v(" "),t("p",[t("code",[s._v("ALTER TABLE students DROP COLUMN birthday")])]),s._v(" "),t("p",[s._v("退出")]),s._v(" "),t("p",[t("code",[s._v("exit")])]),s._v(" "),t("h5",{attrs:{id:"实用-sql-语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实用-sql-语句"}},[s._v("#")]),s._v(" 实用 SQL 语句")]),s._v(" "),t("h6",{attrs:{id:"插入或替换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插入或替换"}},[s._v("#")]),s._v(" 插入或替换")]),s._v(" "),t("p",[t("code",[s._v("REPLACE INTO students (id,class_id,name,gender,score) VALUES (1,1,'小明','M',100);")])]),s._v(" "),t("h6",{attrs:{id:"插入或更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插入或更新"}},[s._v("#")]),s._v(" 插入或更新")]),s._v(" "),t("p",[t("code",[s._v("INSERT INTO students (id,class_id,name,gender,score) VALUES (1,1,'小明','F',99) ON DUPLICATE KEY UPDATE name = '小明',gender='F',score=90;")])]),s._v(" "),t("h6",{attrs:{id:"插入或忽略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插入或忽略"}},[s._v("#")]),s._v(" 插入或忽略")]),s._v(" "),t("p",[t("code",[s._v("INSERT IGNORE INTO students (id,class_id,name,gender,score) VALUES (1,1,'小明','F',99)")])]),s._v(" "),t("h5",{attrs:{id:"快照"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快照"}},[s._v("#")]),s._v(" 快照")]),s._v(" "),t("p",[s._v("如果想要对一个表进行快照，即复制一份当前表的数据到一个新表，可以结合 CREATE TABLE 和 SELECT")]),s._v(" "),t("p",[t("code",[s._v("CREATE TABLE students_of_class1 SELECT * FROM students WHERE class_id = 1;")])]),s._v(" "),t("h5",{attrs:{id:"写入查询结果集"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#写入查询结果集"}},[s._v("#")]),s._v(" 写入查询结果集")]),s._v(" "),t("p",[s._v("如果查询结果需要写入表中，可以结合 INSERT 和 SELECT ，将 SELECT 语句的结果集直接插入到指定表中。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("statistics")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AUTO_INCREMENT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    class_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    average "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DOUBLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("写入各个班的平局分")]),s._v(" "),t("p",[t("code",[s._v("INSERT INTO statistics (class_id,average) SELECT class_id,AVG(score) FROM students GROUP BY class_id;")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("statistics")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----+----------+--------------+")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" class_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" average      "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----+----------+--------------+")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("86.5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("73.666666666")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("88.333333333")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----+----------+--------------+")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rows")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),s._v(" sec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h2",{attrs:{id:"事务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[s._v("#")]),s._v(" 事务")]),s._v(" "),t("p",[s._v("在执行 SQL 语句的时候，某些业务需求，一系列操作必须全部执行，而不能仅执行一部分。例如：一个转账操作：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 从 id1的账户给id2的账户转账100元")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 第一步: 将id=1的A账户余额减去100元")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" accounts "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" balance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" balance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 从二步：将id=2的B账户余额加上100元")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" accounts "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" balance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" balance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 这两条语句必需全部执行，或者，由于某些原因，如果第一条语句成功，第二条语句失败，就必须全部撤销。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("blockquote",[t("p",[s._v("把多条语句作为一个整体进行操作的功能，被称为数据库事务。数据库事务可以确保该事务范围内的所有操作都可以全部成功或者全部失败，如果事务失败，那么效果就和没有执行这些 SQL 一样，不会对数据库数据有任何改动。")])]),s._v(" "),t("p",[s._v("可见，数据库事物具有 ACID 这 4 个特征：")]),s._v(" "),t("ul",[t("li",[s._v("A:Atomic 原子性，将所有 SQL 作为原子工作单元执行，要么全部执行，要么全部不执行；")]),s._v(" "),t("li",[s._v("C:Consistent 一致性，事务完成后，所有数据的的状态都是一致的，即 A 账户只要减去了 100，B 账户则必须加上了 100；")]),s._v(" "),t("li",[s._v("I:Isolation 隔离性，如果有多个事务并发执行，每个事务做出的修改必须与其他事务隔离；")]),s._v(" "),t("li",[s._v("D:Duration 持久性，即事务完成后，对数据库的修改被持久化存储。")])]),s._v(" "),t("p",[s._v("对于单条 SQL 语句，数据库系统自动将其作为一个事务执行，这种事务被称为隐式事务。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 将多条SQL语句作为一个事务执行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" accounts "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" balance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" balance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" accounts "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" balance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" balance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMIT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("COMMIT 是提交事务，即试图把事务内的所有 SQL 所做的修改永久保存。如果 COMMIT 语句执行失败了，整个事务也会失败。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 事务主动失败")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" accounts "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" balance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" balance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" accounts "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" balance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" balance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ROLLBACK")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"隔离级别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#隔离级别"}},[s._v("#")]),s._v(" 隔离级别")]),s._v(" "),t("blockquote",[t("p",[s._v("SQL 定义了四种隔离级别，分别对应可能出现数据不一致的情况：")])]),s._v(" "),t("h5",{attrs:{id:"read-uncommitted"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#read-uncommitted"}},[s._v("#")]),s._v(" Read Uncommitted")]),s._v(" "),t("p",[s._v("Read UNcommitted 是隔离级别最低一种事务级别。这种隔离级别下，一个事务会读到另一个事务更新后但未提交的数据，如果一个事务回滚，那么当前事务读到的数据就是脏数据。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 事务1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRANSACTION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ISOLATION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEVEL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("READ")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNCOMMITTED")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BOb'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ROLLBACK")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 事务2")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRANSACTION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ISOLATION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEVEL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("READ")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNCOMMITTED")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMIT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("h5",{attrs:{id:"read-committed"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#read-committed"}},[s._v("#")]),s._v(" Read Committed")]),s._v(" "),t("p",[s._v("在 Read Committed 隔离级别下，一个事务可能会遇到不可重复读的问题。\n不可重复读是指，在一个事务内，多次读同一数据，在这个事务还没结束时，如果另一个事务恰好修改了这个数据，那么，在第一个事务中，两次读取的数据可能不一致。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 事务1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRANSACTION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ISOLATION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEVEL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("READ")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMITTED")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Bob'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMIT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 事务2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRANSACTION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ISOLATION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEVEL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("READ")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMITTED")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMIT")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h5",{attrs:{id:"repeatable-read"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#repeatable-read"}},[s._v("#")]),s._v(" Repeatable Read")]),s._v(" "),t("p",[s._v("在 Repeatable Read 隔离级别下，一个事务可能会遇到幻读（Phantom Read）的问题。")]),s._v(" "),t("p",[s._v("幻读是指，在一个事务中，第一次查询某条记录，发现没有，但是，试图更新这条不存在的记录时，竟然能成功，并且，再次读取同一条记录，它就神奇的出现了。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 事务1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRANSACTION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ISOLATION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEVEL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("READ")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMITTED")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Bob'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMIT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 事务2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRANSACTION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ISOLATION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEVEL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("REPEATABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("READ")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("99")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Bob'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMIT")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--事务2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRANSACTION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ISOLATION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEVEL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("REPEATABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("READ")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("99")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("99")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Alice'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("99")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("99")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMIT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("h5",{attrs:{id:"serializable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#serializable"}},[s._v("#")]),s._v(" Serializable")]),s._v(" "),t("p",[s._v("Serializable 是最严格的隔离级别。在 Serializable 隔离隔离级别下，所有事务会按照次序依次执行，因此，脏读，不可重复读，幻读都不会出现。")]),s._v(" "),t("p",[s._v("虽然 Serializable 隔离级别下的事务具有最高的安全性，但是，由于事务是串行执行，所以效率会大大下降，应用程序的性能会极具降低，如果没有特别重要的情景，一般都不会使用 Serializable 隔离级别。")]),s._v(" "),t("h5",{attrs:{id:"默认隔离级别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#默认隔离级别"}},[s._v("#")]),s._v(" 默认隔离级别")]),s._v(" "),t("p",[s._v("如果没有指定隔离级别，数据库就会使用默认隔离级别。在 MySQL 中，如果使用 InnoDB，默认的隔离级别是 Repeatable Read(幻读)。")])])}),[],!1,null,null,null);a.default=n.exports}}]);